
<template x-if="EditorOpen">
    <div class="settings-box group-item-editor">
        <div class="header">
            <span class="title" x-text="EditorTitle"></span>
            <div class="buttons">
                <button :disabled="isDisabled()" class="btn" @click="saveEditor">Save</button>
                <button :disabled="isDisabled()" class="btn" @click="closeEditor">Cancel</button>
            </div>
        </div>
        <div class="content">
            <div class="setting">
                <span class="label">Name</span>
                <span class="value">
                    <input :disabled="isDisabled()" type="text" x-model="EditModel.Name" data-rules='["required"]' @blur="blur" @input="input" @keydown.enter="saveEditor">
                </span>
            </div>
            <div class="setting">
                <span class="label">Type</span>
                <span class="value">
                    <select :disabled="isDisabled()" x-model="EditModel._Type" @change="typeChanged"  @keydown.enter="saveEditor">
                        <option value="DashboardApp">App</option>
                        <option value="DashboardLink">Link</option>
                    </select>
                </span>
            </div> 
            <template x-if="EditModel._Type == 'DashboardApp'">
                <div class="setting">
                    <span class="label">App</span>
                    <span class="value">
                        <select :disabled="isDisabled()" x-model="EditModel.AppName" @change="appChanged" data-rules='["required"]' @blur="blur" @input="input" @keydown.enter="saveEditor">
                            <option value="" disabled>Select An App</option>
                            <% Object.keys(apps).forEach(function(category) { %>
                                <optgroup label="<%= category %>">
                                    <% for(let app of apps.Smart) { %>
                                        <option><%= app.Name %></option>
                                    <% } %>
                                </optgroup>
                            <% }) %>
                        </select>
                    </span>
                </div>
            </template>
            <div class="setting">
                <span class="label">URL</span>
                <span class="value">
                    <input :disabled="isDisabled()" type="text" x-model="EditModel.Url" data-rules='["required", "regexMatch:^((http(s)?)|(HTTP(S)?))://."]' @blur="blur" @input="input"  @keydown.enter="saveEditor" />
                </span>
            </div> 
            <div class="setting">
                <span class="label">Size</span>
                <span class="value">
                    <select :disabled="isDisabled()" x-model="EditModel.Size" @keydown.enter="saveEditor">
                        <option value="small">Small</option>
                        <option value="medium">Medium</option>
                        <option value="large">Large</option>
                        <option value="x-large">X-Large</option>
                    </select>
                </span>
            </div> 
            <div class="setting">
                <span class="label">Icon</span>
                <span class="value">
                    <div class="icon-picker">
                        <!-- Show the image -->
                        <template x-if="EditModel.Icon">
                            <img :src="EditModel.Icon" class="icon-pick" style="width: 100px; height: 100px; margin-bottom:1rem">
                        </template>

                        <!-- Show the gray box when image is not available -->
                        <template x-if="!EditModel.Icon">
                            <div class="no-image"></div>
                        </template>

                        <!-- Image file selector -->
                        <button class="btn" id="file-chooser-btn" onclick="document.getElementById('file-chooser').click()">
                            Browse...
                        </button>
                        <input style="display:none" id="file-chooser" class="file-chooser" type="file" accept="image/*" @change="imageChosen">

                    </div>
                </span>
            </div>

            <template x-if="EditorApp.Properties?.length > 0">
                <div class="header">
                    <span class="title">Properties</span>
                </div>
            </template>

            <template x-for="prop in EditorApp.Properties">     
                <template x-if="prop.Name">
                    <div class="setting">
                        <span class="label" x-text="prop.Name"></span>
                        <span class="value">
                            <template x-if="prop.Type === 'string'">
                                <input :disabled="isDisabled()" type="text" x-model="EditModel.Properties[prop.Id]"  @keydown.enter="saveEditor" />
                            </template>
                            <template x-if="prop.Type === 'password'">
                                <input type="password" x-model="EditModel.Properties[prop.Id]"  @keydown.enter="saveEditor" />
                            </template>
                            <template x-if="prop.Type === 'int'">
                                <input :disabled="isDisabled()" type="number" x-model.number="EditModel.Properties[prop.Id]"  @keydown.enter="saveEditor" />
                            </template>
                            <template x-if="prop.Type === 'bool'">
                                <label x:for="$id('toggle')" class="toggle-switchy">
                                    <input :disabled="isDisabled()" type="checkbox" :id="$id('toggle')" x-model="EditModel.Properties[prop.Id]"  @keydown.enter="saveEditor" />
                                    <span class="toggle">
                                        <span class="switch"></span>
                                    </span>
                                </label>
                            </template>
                        </span>
                    </div> 
                </template>
            </template>

            <template x-if="EditorApp.TestFunction">
                <div class="setting tester">
                    <span class="label"></span>
                    <span class="value">                    
                        <button :disabled="isDisabled()" class="btn" @click="testApp" x-text="testing ? 'Testing' : 'Test'"></button>
                    </span>
                </div>
            </template>
        </div>
    </div>
</template>